// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model NguoiDung {
  id          String    @id @default(cuid())
  email       String    @unique
  matKhau     String
  hoTen       String
  vaiTro      VaiTro    @default(SINHVIEN)
  gioiTinh    GioiTinh?
  maSV        String?   @db.VarChar(50)
  maCB        String?   @db.VarChar(50)
  maLop       String?   @db.VarChar(50)
  maKhoa      String?   @db.VarChar(255)
  soDT        String?   @db.VarChar(30)
  ngaySinh    DateTime?
  avatarUrl   String?   @db.VarChar(255)
  isActive    Boolean   @default(true)
  lastLoginAt DateTime?
  ghiChu      String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  dangKy      DangKyHoatDong[]
  diemDanh    DangKyHoatDong[] @relation("NguoiDungDiemDanh")
  phanHoi     PhanHoiHoatDong[]

  @@index([email])
  @@index([maSV])
  @@index([maCB])
  @@index([vaiTro, isActive])
}

model HoatDong {
  id            String             @id @default(cuid())
  maHoatDong    String?            @unique
  tieuDe        String
  moTa          String?
  diemCong      Int                @default(0)
  batDauLuc     DateTime?
  ketThucLuc    DateTime?
  diaDiem       String?
  sucChuaToiDa  Int?
  hinhAnh       String?            @db.VarChar(255)
  danhMuc       String?            @db.VarChar(100)
  isFeatured    Boolean            @default(false)
  isPublished   Boolean            @default(true)
  createdAt     DateTime           @default(now())
  updatedAt     DateTime           @updatedAt
  dangKy        DangKyHoatDong[]
  phanHoi       PhanHoiHoatDong[]

  @@index([isPublished, batDauLuc])
  @@index([danhMuc])
}

model DangKyHoatDong {
  id           String            @id @default(cuid())
  nguoiDungId  String
  hoatDongId   String
  trangThai    TrangThaiDangKy   @default(DANG_KY)
  lyDoHuy      String?
  ghiChu       String?
  dangKyLuc    DateTime          @default(now())
  duyetLuc     DateTime?
  updatedAt    DateTime          @updatedAt
  diemDanhLuc  DateTime?
  diemDanhBoiId String?
  diemDanhGhiChu String?

  nguoiDung    NguoiDung         @relation(fields: [nguoiDungId], references: [id])
  hoatDong     HoatDong          @relation(fields: [hoatDongId], references: [id])
  diemDanhBoi  NguoiDung?        @relation("NguoiDungDiemDanh", fields: [diemDanhBoiId], references: [id])
  phanHoi      PhanHoiHoatDong?

  @@index([hoatDongId, trangThai])
  @@index([nguoiDungId, trangThai])
  @@unique([nguoiDungId, hoatDongId])
}

model PhanHoiHoatDong {
  id           String             @id @default(cuid())
  dangKyId     String             @unique
  nguoiDungId  String
  hoatDongId   String
  noiDung      String
  danhGia      Int?
  minhChung    Json?
  trangThai    TrangThaiPhanHoi  @default(CHO_DUYET)
  taoLuc       DateTime           @default(now())
  capNhatLuc   DateTime           @updatedAt

  dangKy       DangKyHoatDong    @relation(fields: [dangKyId], references: [id])
  nguoiDung    NguoiDung         @relation(fields: [nguoiDungId], references: [id])
  hoatDong     HoatDong          @relation(fields: [hoatDongId], references: [id])

  @@index([hoatDongId])
  @@index([nguoiDungId])
  @@unique([nguoiDungId, hoatDongId])
}

enum VaiTro {
  SINHVIEN
  GIANGVIEN
  NHANVIEN
  ADMIN
}

enum GioiTinh {
  Nam
  Nữ
  Khác
}

enum TrangThaiDangKy {
  DANG_KY
  DA_HUY
  DA_THAM_GIA
  VANG_MAT
}

enum TrangThaiPhanHoi {
  CHO_DUYET
  DA_DUYET
  BI_TU_CHOI
}
